# If you have issues with platform compatibility and uv, plesae build with
#   docker build --platform=linux/amd64 -f Dockerfile.inla .

FROM ivargr/r_inla
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Enable bytecode compilation and safe volume handling
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy

# Set working directory
WORKDIR /app

# Install all system packages in a single layer
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    libncurses-dev \
    libreadline-dev \
    libbz2-dev && \
    rm -rf /var/lib/apt/lists/*

# First install only the dependencies using the lockfile (no source code yet)
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev

# Copy source files
COPY ./chap_core ./chap_core
COPY ./config ./config
COPY ./pyproject.toml .
COPY ./uv.lock .
COPY ./README.md .

# Now install the project (with dependencies already cached)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Final environment path setup
ENV PATH="/app/.venv/bin:$PATH"
